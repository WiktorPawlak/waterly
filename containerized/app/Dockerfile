####
# This Dockerfile is used in order to build a container that runs the Quarkus application in JVM mode
#
# Before building the docker image run:
#
# mvn package
#
# Then, build the image with:
#
# docker build -f src/main/docker/Dockerfile.jvm -t quarkus/quarkus-rest-example-jvm .
#
# Then run the container using:
#
# docker run -i --rm -p 8080:8080 quarkus/quarkus-rest-example-jvm
#
# If you want to include the debug port into your docker image
# you will have to expose the debug port (default 5005) like this :  EXPOSE 8080 5050
#
# Then run the container using :
#
# docker run -i --rm -p 8080:8080 -p 5005:5005 -e JAVA_ENABLE_DEBUG="true" quarkus/quarkus-rest-example-jvm
#
###
FROM registry.access.redhat.com/ubi8/ubi:8.1

ARG JAVA_PACKAGE=java-17-openjdk-headless
ARG RUN_JAVA_VERSION=1.3.8

ENV LANG='en_US.UTF-8' LANGUAGE='en_US:en'


# Install java and the run-java script
# Also set up permissions for user `1001`
RUN yum install -y curl ca-certificates ${JAVA_PACKAGE} make gcc \
    && yum -y update \
    && yum upgrade \
    && mkdir /deployments \
    && chown 1001 /deployments \
    && chmod "g+rwX" /deployments \
    && chown 1001:root /deployments \
    && curl https://repo1.maven.org/maven2/io/fabric8/run-java-sh/${RUN_JAVA_VERSION}/run-java-sh-${RUN_JAVA_VERSION}-sh.sh -o /deployments/run-java.sh \
    && chown 1001 /deployments/run-java.sh \
    && chmod 540 /deployments/run-java.sh \
    && echo "securerandom.source=file:/dev/urandom" >> /etc/alternatives/jre/lib/security/java.security

# Configure the JAVA_OPTIONS, you can add -XshowSettings:vm to also display the heap size.
ENV JAVA_OPTIONS="-Dquarkus.http.host=0.0.0.0 -Djava.util.logging.manager=org.jboss.logmanager.LogManager"

COPY target/quarkus-app/lib /deployments/lib/
COPY target/quarkus-app/*.jar /deployments/
COPY target/quarkus-app/app /deployments/app/
COPY target/quarkus-app/quarkus /deployments/quarkus

EXPOSE 8080

ENTRYPOINT [ "/deployments/run-java.sh" ]

# Build and install stress-ng
WORKDIR /tmp
RUN curl -L https://github.com/ColinIanKing/stress-ng/archive/V0.12.03.tar.gz | tar xz \
    && cd stress-ng-0.12.03 \
    && make \
    && make install